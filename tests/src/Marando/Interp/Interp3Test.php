<?php

namespace Marando\Interp;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2015-11-28 at 23:37:50.
 */
class Interp3Test extends \PHPUnit_Framework_TestCase {

  /**
   * @covers Marando\Interp\Interp3::n
   */
  public function testN() {
    // Target x whereby to use n-factor (more than 3 values)
    $yt = [0.898013, 0.891109, 0.884226, 0.877366, 0.870531];
    Interp3::init(5, 9, $yt)->n(0.18125, $x, $y, $c, 8);
    $this->assertEquals(8.18125, $x, 'x targeted', 1e-6);
    $this->assertEquals(0.876125, $y, 'y targeted', 1e-6);

    // Straight n-factor
    Interp3::init(7, 9, [0.884226, 0.877366, 0.870531])->n(0.18125, $x, $y);
    $this->assertEquals(8.18125, $x, 'x', 1e-6);
    $this->assertEquals(0.876125, $y, 'y', 1e-6);
  }

  /**
   * @covers Marando\Interp\Interp3::x
   */
  public function testX() {
    $yt = [0.898013, 0.891109, 0.884226, 0.877366, 0.870531];
    Interp3::init(5, 9, $yt)->x(8.18125, $y);

    $this->assertEquals(0.876125, $y, 'y', 1e-6);
  }

  /**
   * @covers Marando\Interp\Interp3::extremum
   */
  public function testExtremum() {
    Interp3::init(12, 20, [1.3814294, 1.3812213, 1.3812453])->extremum($x, $y);

    $this->assertEquals(17.58640, $x, 'x', 1e-4);
    $this->assertEquals(1.3812030, $y, 'y', 1e-7);
  }

  /**
   * @covers Marando\Interp\Interp3::zero
   */
  public function testZero() {
    Interp3::init(26, 28, [-1693.4, 406.3, 2303.2])->zero($x, $y);

    $this->assertEquals(26.79873, $x, 'x', 1e-4);
    $this->assertEquals(0, $y, 'y', 1e-7);
  }

}
