<?php

namespace Marando\Interp;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2015-11-29 at 02:14:58.
 */
class Interp5Test extends \PHPUnit_Framework_TestCase {

  /**
   * @covers Marando\Interp\Interp5::n
   */
  public function testN() {
    $yt = [
        54 / 60 + 36.126 / 3600,
        54 / 60 + 24.606 / 3600,
        54 / 60 + 15.486 / 3600,
        54 / 60 + 8.694 / 3600,
        54 / 60 + 4.133 / 3600,
    ];

    Interp5::init(27, 29, $yt)->n((3 + 20 / 60) / 12, $x, $y);

    $this->assertEquals(28 + (3 + 20 / 60) / 24, $x, 'x', 1e-7);
    $this->assertEquals(54 / 60 + 13.369 / 3600, $y, 'y', 1e-6);
  }

  /**
   * @covers Marando\Interp\Interp5::x
   */
  public function testX() {
    // Exactly 5 data points
    $yt = [
        54 / 60 + 36.126 / 3600,
        54 / 60 + 24.606 / 3600,
        54 / 60 + 15.486 / 3600,
        54 / 60 + 8.694 / 3600,
        54 / 60 + 4.133 / 3600,
    ];
    Interp5::init(27, 29, $yt)->x(28 + (3 + 20 / 60) / 24, $y, $K);
    $this->assertEquals(54 / 60 + 13.369 / 3600, $y, 'y (5 values)', 1e-6);

    // More than 5 data points
    $yt = [
        1,
        54 / 60 + 36.126 / 3600,
        54 / 60 + 24.606 / 3600,
        54 / 60 + 15.486 / 3600,
        54 / 60 + 8.694 / 3600,
        54 / 60 + 4.133 / 3600,
        53,
    ];
    Interp5::init(26.5, 29.5, $yt)->x(28 + (3 + 20 / 60) / 24, $y);
    $this->assertEquals(54 / 60 + 13.369 / 3600, $y, 'y (>5 values)', 1e-6);
  }

  /**
   * @covers Marando\Interp\Interp5::extremum
   * @todo   Implement testExtremum().
   */
  public function testExtremum() {
    // Remove the following lines when you implement this test.
    $this->markTestIncomplete(
            'This test has not been implemented yet.'
    );
  }

  /**
   * @covers Marando\Interp\Interp5::zero
   */
  public function testZero() {
    $yt = [
        -1 - 11 / 60 - 21.23 / 3600,
        -0 - 28 / 60 - 12.31 / 3600,
        0 + 16 / 60 + 7.02 / 3600,
        1 + 1 / 60 + 0.13 / 3600,
        1 + 45 / 60 + 46.33 / 3600,
    ];
    Interp5::init(25, 29, $yt)->zero($x, $y);
    $this->assertEquals(26.638587, $x, 'x', 1e-6);
    $this->assertEquals(0, $y, 'y', 1e-1);

    $yt = [
        -2,
        -1 - 11 / 60 - 21.23 / 3600,
        -0 - 28 / 60 - 12.31 / 3600,
        0 + 16 / 60 + 7.02 / 3600,
        1 + 1 / 60 + 0.13 / 3600,
        1 + 45 / 60 + 46.33 / 3600,
        2
    ];

    Interp5::init(24, 30, $yt)->extremum($x, $y);
    $this->assertEquals(26.638587, $x, 'x', 1e-6);
    $this->assertEquals(0, $y, 'y', 1e-1);
  }

}
